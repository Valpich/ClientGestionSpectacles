package javaee.spectacle.webservices;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.7.18 2016-03-16T20:46:16.719+01:00 Generated source
 * version: 2.7.18
 * 
 */
@WebServiceClient(name = "GestionSpectaclesService",
    wsdlLocation = "http://localhost:8080/GestionSpectacles/services/GestionSpectaclesPort?wsdl",
    targetNamespace = "http://webservices.spectacle.javaee/")
public class GestionSpectaclesService extends Service {

  public final static URL WSDL_LOCATION;

  public final static QName SERVICE =
      new QName("http://webservices.spectacle.javaee/", "GestionSpectaclesService");
  public final static QName GestionSpectaclesPort =
      new QName("http://webservices.spectacle.javaee/", "GestionSpectaclesPort");
  static {
    URL url = null;
    try {
      url = new URL("http://localhost:8080/GestionSpectacles/services/GestionSpectaclesPort?wsdl");
    } catch (final MalformedURLException e) {
      java.util.logging.Logger.getLogger(GestionSpectaclesService.class.getName()).log(
          java.util.logging.Level.INFO, "Can not initialize the default wsdl from {0}",
          "http://localhost:8080/GestionSpectacles/services/GestionSpectaclesPort?wsdl");
    }
    WSDL_LOCATION = url;
  }

  public GestionSpectaclesService(URL wsdlLocation) {
    super(wsdlLocation, SERVICE);
  }

  public GestionSpectaclesService(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public GestionSpectaclesService() {
    super(WSDL_LOCATION, SERVICE);
  }

  // This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
  // API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
  // compliant code instead.
  public GestionSpectaclesService(WebServiceFeature... features) {
    super(WSDL_LOCATION, SERVICE, features);
  }

  // This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
  // API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
  // compliant code instead.
  public GestionSpectaclesService(URL wsdlLocation, WebServiceFeature... features) {
    super(wsdlLocation, SERVICE, features);
  }

  // This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
  // API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
  // compliant code instead.
  public GestionSpectaclesService(URL wsdlLocation, QName serviceName,
      WebServiceFeature... features) {
    super(wsdlLocation, serviceName, features);
  }

  /**
   *
   * @return returns WSGestionSpectacles
   */
  @WebEndpoint(name = "GestionSpectaclesPort")
  public WSGestionSpectacles getGestionSpectaclesPort() {
    return super.getPort(GestionSpectaclesPort, WSGestionSpectacles.class);
  }

  /**
   * 
   * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
   *        Supported features not in the <code>features</code> parameter will have their default
   *        values.
   * @return returns WSGestionSpectacles
   */
  @WebEndpoint(name = "GestionSpectaclesPort")
  public WSGestionSpectacles getGestionSpectaclesPort(WebServiceFeature... features) {
    return super.getPort(GestionSpectaclesPort, WSGestionSpectacles.class, features);
  }

}
